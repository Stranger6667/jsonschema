name: ci

on:
  pull_request: {}
  push:
    branches:
      - master

jobs:

  commitsar:
    name: Verify commit messages
    runs-on: ubuntu-20.04
    steps:
      - name: Check out code
        uses: actions/checkout@v3.0.0
        with:
          fetch-depth: 0
      - name: Run commitsar
        uses: aevea/commitsar@v0.18.0

  pre-commit:
    name: Generic pre-commit checks
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - run: pip install pre-commit
      - run: pre-commit run --all-files
        working-directory: ./bindings/python

  test-stable:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, macos-12, windows-2022]
        draft: [draft201909, draft202012]

    name: Test ${{ matrix.draft }} (stable) on ${{ matrix.os}}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Cache cargo
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: stable-${{ matrix.os }}-${{ matrix.draft }}-cargo-cache

      - run: cargo test --no-fail-fast --features ${{ matrix.draft }}
        working-directory: ./jsonschema

  build-wasm32:
    strategy:
      fail-fast: false
      matrix:
        target: ['wasm32-unknown-unknown']

    name: Build on ${{ matrix.target }}
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Cache cargo
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: stable-${{ matrix.target }}-cargo-cache

      - run: cargo build --target ${{ matrix.target }} --no-default-features --features=cli
        working-directory: ./jsonschema

  coverage:
    name: Run test coverage
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Toolchain setup
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
      - name: Install grcov
        run: cargo install cargo-tarpaulin

      - name: Cache cargo
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: coverage-cargo-cache

      - name: Run tests
        run: cargo +nightly tarpaulin --verbose --all-features --out Xml
        working-directory: ./jsonschema
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        if: ${{ env.GITHUB_REPOSITORY }} == 'Stranger6667/jsonschema-rs'
        with:
          name: coverage

  test-python:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, macos-12, windows-2022]
        python-version: ['3.7', '3.8', '3.9', '3.10', '3.11']

    name: Python ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64

      - run: python -m pip install tox
        working-directory: ./bindings/python

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Cache cargo
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: python-${{ matrix.python-version }}-${{ matrix.os }}-cargo-cache

      - name: Run ${{ matrix.python }} tox job
        run: tox -e py
        working-directory: ./bindings/python

  fmt:
    name: Rustfmt
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt
      - run: cargo fmt --all -- --check
        working-directory: ./jsonschema

  clippy:
    name: Clippy
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: clippy
      - run: cargo clippy --all-targets --all-features -- -D warnings
        working-directory: ./jsonschema

      - run: cargo clippy --all-targets --all-features -- -D warnings
        working-directory: ./bindings/python

  features:
    name: Check features
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: taiki-e/install-action@cargo-hack
      - run: cargo hack check --feature-powerset --lib
        working-directory: ./jsonschema
